#!/usr/bin/env bash
#
# Author: Kris Childress
# kris@nivenly.com
# 2016
#
# kgit_switch
#
# Will rebase a feature branch onto master. This script assumes a working remote called "upstream" that can easily be created with kgit_clone


# Vars
GSDIR=~/.gitswitch.d
GITCONFIG=~/.gitconfig

# Build this for good measure
mkdir -p $GSDIR

usage() {
    PURPLE='\033[0;35m'
    NC='\033[0m' # No Color
    echo "gitswitch - Used to switch .gitconfigs for multiple user git usage"
    echo ""
    printf "gitswitch ${PURPLE}stash${NC}   <name>    Will stash the current .gitconfig as <name>\n"
    printf "gitswitch ${PURPLE}list${NC}              Will list all available stashed .gitconfigs\n"
    printf "gitswitch ${PURPLE}use${NC}     <name>    Will push a stashed .gitconfig to be used\n"
    printf "gitswitch ${PURPLE}new${NC}     <name>    Will create a new .gitconfig by a name\n"
    printf "gitswitch ${PURPLE}delete${NC}  <name>    Will create a new .gitconfig by a name\n"
    printf "gitswitch ${PURPLE}show${NC}    <name>    Will show the current .gitconfig\n"
    exit 1
}
CMD=$1

# Empty command
if [ -z "$CMD" ]; then
    usage
fi

#
#  LIST
#
if [[ "$CMD" = "list" ]]; then
    echo "Available configs: "
    ls $GSDIR
    echo ""
    exit 0
fi

#
#  STASH
#
if [[ "$CMD" = "stash" ]]; then
    if [ -z "$2" ]; then
        usage
    fi
    # $2 is our name
    cp ~/.gitconfig $GSDIR/$2 && rm $GITCONFIG # Safe move
    exit 0
fi

#
#  USE
#
if [[ "$CMD" = "use" ]]; then
    if [ -z "$2" ]; then
        usage
    fi
    # $2 is our name
    cp $GSDIR/$2 $GITCONFIG
    exit 0
fi

#
#  NEW
#
if [[ "$CMD" = "new" ]]; then
    if [ -z "$2" ]; then
        usage
    fi
    # $2 is our name
    cp ../doc/.gitconfig $GSDIR/$2
    wemacs $GSDIR/$2
    exit 0
fi

#
#  DELETE
#
if [[ "$CMD" = "delete" ]]; then
    if [ -z "$2" ]; then
        usage
    fi
    # $2 is our name
    rm -f $GSDIR/$2
    exit 0
fi

#
#  SHOW
#
if [[ "$CMD" = "show" ]]; then
    cat $GITCONFIG
    echo ""
    exit 0
fi


#
#  FAIL
#
usage
